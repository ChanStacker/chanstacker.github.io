---
layout: post
title: "C# 10 features"
date: 2022-11-15 09:00:00 +0100
categories: .Net
---

* To reduce on boilerplate code, Microsoft has introduced Global using directives
* When specified as Global, a directive becomes available to the whole project.
* Best practice would be to create a dedicated class `GlobalUsings.cs` and specify the directives as below.  It also works with static and aliases:

{% highlight csharp linenos %}
global using Mycustom.namespace;
global using static Mystatic.namespace;
global using Mine = MyOther.namespace;
{% endhighlight %}

* Global directives can also be defined in the project file, a feature called `Implicit Usings` and enabled with flag: 
{% highlight xml linenos %}
<ImplicitUsings>enable</ImplicitUsings>  
{% endhighlight %}

* With `Implicit Usings`, a global using file get generated in the obj folder, ending with ".GlobalUsings.g.cs"
* Depending on the project type, the compiler will add a set of global directives to the generated global usings eg for a console application:

{% highlight csharp linenos %}
System
System.Collections.Generic
System.IO
System.Linq
System.Net.Http
System.Threading
System.Threading.Tasks
{% endhighlight %}


* There is also the flexibility of adding or removing from the default list:
{% highlight xml linenos %}
<ItemGroup>
  <Using Remove="System.Threading" />
  <Using Include="Microsoft.Extensions.Logging" />
</ItemGroup>
{% endhighlight %}